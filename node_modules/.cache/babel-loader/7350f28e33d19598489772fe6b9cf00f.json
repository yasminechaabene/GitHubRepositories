{"ast":null,"code":"import _slicedToArray from\"C:/Users/yasmi/Desktop/github-repositories-per-user/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import AlertContext from'./alertContext';import AlertReducer from'./alertReducer';import*as Types from'../types';var AlertState=function AlertState(props){var initialState=null;var _useReducer=useReducer(AlertReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var setAlert=function setAlert(msg,type){dispatch({type:Types.SET_ALERT,payload:{msg:msg,type:type}});setTimeout(function(){return dispatch({type:Types.REMOVE_ALERT});},3000);};return/*#__PURE__*/React.createElement(AlertContext.Provider,{value:{alert:state,setAlert:setAlert}},props.children);};export default AlertState;","map":{"version":3,"sources":["C:/Users/yasmi/Desktop/github-repositories-per-user/src/context/alert/AlertState.js"],"names":["React","useReducer","AlertContext","AlertReducer","Types","AlertState","props","initialState","state","dispatch","setAlert","msg","type","SET_ALERT","payload","setTimeout","REMOVE_ALERT","alert","children"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,UAAvB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1B,GAAMC,CAAAA,YAAY,CAAG,IAArB,CAD0B,gBAGAN,UAAU,CAACE,YAAD,CAAeI,YAAf,CAHV,4CAGnBC,KAHmB,iBAGZC,QAHY,iBAK1B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAMC,IAAN,CAAe,CAC9BH,QAAQ,CAAC,CACPG,IAAI,CAAER,KAAK,CAACS,SADL,CAEPC,OAAO,CAAE,CAAEH,GAAG,CAAHA,GAAF,CAAOC,IAAI,CAAJA,IAAP,CAFF,CAAD,CAAR,CAIAG,UAAU,CAAC,iBAAMN,CAAAA,QAAQ,CAAC,CAAEG,IAAI,CAAER,KAAK,CAACY,YAAd,CAAD,CAAd,EAAD,CAA+C,IAA/C,CAAV,CACD,CAND,CAQA,mBACE,oBAAC,YAAD,CAAc,QAAd,EACE,KAAK,CAAE,CACLC,KAAK,CAAET,KADF,CAELE,QAAQ,CAARA,QAFK,CADT,EAMGJ,KAAK,CAACY,QANT,CADF,CAUD,CAvBD,CAyBA,cAAeb,CAAAA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport * as Types from '../types';\n\nconst AlertState = props => {\n  const initialState = null;\n\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n  const setAlert = (msg, type) => {\n    dispatch({\n      type: Types.SET_ALERT,\n      payload: { msg, type },\n    });\n    setTimeout(() => dispatch({ type: Types.REMOVE_ALERT }), 3000);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alert: state,\n        setAlert,\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}