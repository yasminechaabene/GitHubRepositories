{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yasmi\\\\Desktop\\\\github-finder-react-app-master\\\\src\\\\context\\\\github\\\\GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport * as Types from '../types';\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n\n  const searchUsers = async text => {\n    setLoading();\n    const url = `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`;\n    const res = await axios.get(url);\n    dispatch({\n      type: Types.SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const url = `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`;\n    const res = await axios.get(url);\n    dispatch({\n      type: Types.GET_USER,\n      payload: res.data\n    });\n  }; // Get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const url = `https://api.github.com/users/${username}/repos?per_page=15&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`;\n    const res = await axios.get(url);\n    dispatch({\n      type: Types.GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: Types.CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: Types.SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["C:/Users/yasmi/Desktop/github-finder-react-app-master/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","Types","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","url","res","get","type","SEARCH_USERS","payload","data","items","getUser","username","GET_USER","getUserRepos","GET_REPOS","clearUsers","CLEAR_USERS","SET_LOADING","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AAEA,IAAIC,cAAJ;AACA,IAAIC,kBAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCJ,EAAAA,cAAc,GAAGE,OAAO,CAACC,GAAR,CAAYE,0BAA7B;AACAJ,EAAAA,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYG,8BAAjC;AACD,CAHD,MAGO;AACLN,EAAAA,cAAc,GAAGE,OAAO,CAACC,GAAR,CAAYI,gBAA7B;AACAN,EAAAA,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYK,oBAAjC;AACD;;AAED,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,KAAK,EAAE,EAHY;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACG,aAAD,EAAgBa,YAAhB,CAApC,CAR2B,CAU3B;;AACA,QAAMO,WAAW,GAAG,MAAMC,IAAN,IAAc;AAChCC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAI,yCAAwCF,IAAK,cAAanB,cAAe,kBAAiBC,kBAAmB,EAA1H;AAEA,UAAMqB,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAUF,GAAV,CAAlB;AAEAJ,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEzB,KAAK,CAAC0B,YADL;AAEPC,MAAAA,OAAO,EAAEJ,GAAG,CAACK,IAAJ,CAASC;AAFX,KAAD,CAAR;AAID,GAXD,CAX2B,CAwB3B;;;AACA,QAAMC,OAAO,GAAG,MAAMC,QAAN,IAAkB;AAChCV,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAI,gCAA+BS,QAAS,cAAa9B,cAAe,kBAAiBC,kBAAmB,EAArH;AAEA,UAAMqB,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAUF,GAAV,CAAlB;AAEAJ,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEzB,KAAK,CAACgC,QADL;AAEPL,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAVD,CAzB2B,CAqC3B;;;AACA,QAAMK,YAAY,GAAG,MAAMF,QAAN,IAAkB;AACrCV,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAI,gCAA+BS,QAAS,iDAAgD9B,cAAe,kBAAiBC,kBAAmB,EAAxJ;AAEA,UAAMqB,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAUF,GAAV,CAAlB;AAEAJ,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEzB,KAAK,CAACkC,SADL;AAEPP,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAXD,CAtC2B,CAmD3B;;;AACA,QAAMO,UAAU,GAAG,MAAMjB,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEzB,KAAK,CAACoC;AAAd,GAAD,CAAjC,CApD2B,CAqD3B;;;AACA,QAAMf,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEzB,KAAK,CAACqC;AAAd,GAAD,CAAjC;;AAEA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLxB,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHR;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLG,MAAAA,WALK;AAMLgB,MAAAA,UANK;AAOLL,MAAAA,OAPK;AAQLG,MAAAA;AARK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGtB,KAAK,CAAC2B,QAZT,CADF;AAgBD,CAxED;;GAAM5B,W;;KAAAA,W;AA0EN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport * as Types from '../types';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  // Search Users\n  const searchUsers = async text => {\n    setLoading();\n\n    const url = `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`;\n\n    const res = await axios.get(url);\n\n    dispatch({\n      type: Types.SEARCH_USERS,\n      payload: res.data.items,\n    });\n  };\n\n  // Get User\n  const getUser = async username => {\n    setLoading();\n    const url = `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`;\n\n    const res = await axios.get(url);\n\n    dispatch({\n      type: Types.GET_USER,\n      payload: res.data,\n    });\n  };\n\n  // Get Repos\n  const getUserRepos = async username => {\n    setLoading();\n\n    const url = `https://api.github.com/users/${username}/repos?per_page=15&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`;\n\n    const res = await axios.get(url);\n\n    dispatch({\n      type: Types.GET_REPOS,\n      payload: res.data,\n    });\n  };\n\n  // Clear Users\n  const clearUsers = () => dispatch({ type: Types.CLEAR_USERS });\n  // Set Loading\n  const setLoading = () => dispatch({ type: Types.SET_LOADING });\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos,\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}