{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yasmi\\\\Desktop\\\\github-finder-react-app-master\\\\src\\\\components\\\\repos\\\\Repos.js\";\nimport { React, useState } from 'react';\nimport RepoItem from './RepoItem';\nimport PropTypes from 'prop-types';\n\nconst Repos = ({\n  repos\n}) => {\n  return repos.map(repo => /*#__PURE__*/React.createElement(RepoItem, {\n    repo: repo,\n    key: repo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 28\n    }\n  }));\n};\n\n_c = Repos;\n\n/*#__PURE__*/\nReact.createElement(\"input\", {\n  type: \"text\" //name=\"text\"\n  ,\n  placeholder: \"Search repO...\",\n  value: input,\n  onChange: onChange,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 1\n  }\n});\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired\n};\nconst [input, setInput] = useState('');\n\nconst onChange = e => {\n  setInput(e.target.value);\n};\n\nif (input.length > 0) {\n  repos = repos.filter(i => {\n    return i.name.match(input);\n  });\n}\n\nexport default Repos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"sources":["C:/Users/yasmi/Desktop/github-finder-react-app-master/src/components/repos/Repos.js"],"names":["React","useState","RepoItem","PropTypes","Repos","repos","map","repo","id","input","onChange","propTypes","array","isRequired","setInput","e","target","value","length","filter","i","name","match"],"mappings":";AAAA,SAAQA,KAAR,EAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3B,SAAOA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAAI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAAP;AACD,CAFD;;KAAMJ,K;;AAIN;AAAA;AACU,EAAA,IAAI,EAAC,MADf,CAEU;AAFV;AAGU,EAAA,WAAW,EAAC,gBAHtB;AAIU,EAAA,KAAK,EAAEK,KAJjB;AAKU,EAAA,QAAQ,EAAEC,QALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOAN,KAAK,CAACO,SAAN,GAAkB;AAChBN,EAAAA,KAAK,EAAEF,SAAS,CAACS,KAAV,CAAgBC;AADP,CAAlB;AAGA,MAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAEE,MAAMS,QAAQ,GAAGK,CAAC,IAAI;AACpBD,EAAAA,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,CAFD;;AAGA,IAAIR,KAAK,CAACS,MAAN,GAAe,CAAnB,EAAqB;AACnBb,EAAAA,KAAK,GAAGA,KAAK,CAACc,MAAN,CAAcC,CAAD,IAAK;AACxB,WAAOA,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAab,KAAb,CAAP;AAED,GAHO,CAAR;AAID;;AACH,eAAeL,KAAf","sourcesContent":["import {React,useState} from 'react';\nimport RepoItem from './RepoItem';\nimport PropTypes from 'prop-types';\n\nconst Repos = ({ repos }) => {\n  return repos.map(repo => <RepoItem repo={repo} key={repo.id} />);\n};\n\n<input\n          type=\"text\"\n          //name=\"text\"\n          placeholder=\"Search repO...\"\n          value={input}\n          onChange={onChange}\n        />\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired,\n};\nconst [input, setInput] = useState('');\n\n  const onChange = e => {\n    setInput(e.target.value);\n  };\n  if (input.length > 0){\n    repos = repos.filter((i)=>{\n      return i.name.match(input);\n\n    });\n  }\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}