{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yasmi\\\\Desktop\\\\github-finder-react-app-master\\\\src\\\\components\\\\repos\\\\Repos.js\";\nimport React from 'react';\nimport RepoItem from './RepoItem';\nimport PropTypes from 'prop-types';\nconst [input, setInput] = useState('');\n\nconst onChange = e => {\n  setInput(e.target.value);\n};\n\nif (input.length > 0) {\n  repos = repos.filter(i => {\n    return i.name.match(input);\n  });\n}\n\nconst Repos = ({\n  repos\n}) => {\n  return repos.map(repo => /*#__PURE__*/React.createElement(RepoItem, {\n    repo: repo,\n    key: repo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 28\n    }\n  }));\n};\n\n_c = Repos;\n\n/*#__PURE__*/\nReact.createElement(\"input\", {\n  type: \"text\" //name=\"text\"\n  ,\n  placeholder: \"Search repO...\",\n  value: input,\n  onChange: onChange,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 1\n  }\n});\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired\n};\nexport default Repos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"sources":["C:/Users/yasmi/Desktop/github-finder-react-app-master/src/components/repos/Repos.js"],"names":["React","RepoItem","PropTypes","input","setInput","useState","onChange","e","target","value","length","repos","filter","i","name","match","Repos","map","repo","id","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;;AAEE,MAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBH,EAAAA,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,CAFD;;AAGA,IAAIN,KAAK,CAACO,MAAN,GAAe,CAAnB,EAAqB;AACnBC,EAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAcC,CAAD,IAAK;AACxB,WAAOA,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAaZ,KAAb,CAAP;AAED,GAHO,CAAR;AAID;;AACH,MAAMa,KAAK,GAAG,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAe;AAC3B,SAAOA,KAAK,CAACM,GAAN,CAAUC,IAAI,iBAAI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAAP;AACD,CAFD;;KAAMH,K;;AAIN;AAAA;AACU,EAAA,IAAI,EAAC,MADf,CAEU;AAFV;AAGU,EAAA,WAAW,EAAC,gBAHtB;AAIU,EAAA,KAAK,EAAEb,KAJjB;AAKU,EAAA,QAAQ,EAAEG,QALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOAU,KAAK,CAACI,SAAN,GAAkB;AAChBT,EAAAA,KAAK,EAAET,SAAS,CAACmB,KAAV,CAAgBC;AADP,CAAlB;AAIA,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport RepoItem from './RepoItem';\nimport PropTypes from 'prop-types';\nconst [input, setInput] = useState('');\n\n  const onChange = e => {\n    setInput(e.target.value);\n  };\n  if (input.length > 0){\n    repos = repos.filter((i)=>{\n      return i.name.match(input);\n\n    });\n  }\nconst Repos = ({ repos }) => {\n  return repos.map(repo => <RepoItem repo={repo} key={repo.id} />);\n};\n\n<input\n          type=\"text\"\n          //name=\"text\"\n          placeholder=\"Search repO...\"\n          value={input}\n          onChange={onChange}\n        />\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired,\n};\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}